service: canary-aws-ping

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  
  environment:
    APP_VERSION: ${self:custom.version}
    SERVERLESS_STAGE: ${self:provider.stage}
    LOG_LEVEL: ${opt:log-level, 'info'}

  deploymentBucket:
    name: canary-aws-ping-deployments-${aws:accountId}

custom:
  version: ${file(package.json):version}

functions:
  ping:
    handler: src/handlers/ping.handler
    description: 'Ping service with Node.js version response'
    timeout: 10
    memorySize: 128
    
    # Enable versioning and aliases for canary deployments
    versioning: true
    
    # Configure deployment with canary strategy
    deploymentSettings:
      type: ${self:custom.deploymentType.${self:provider.stage}, 'AllAtOnce'}
      alias: Live
      preTrafficHook: pingPreTrafficHook
      postTrafficHook: pingPostTrafficHook
      alarms:
        - AliasErrorMetricGreaterThanZeroAlarm
        - AliasLatencyMetricGreaterThanThresholdAlarm
      triggerConfigurations:
        - triggerEvents:
            - DeploymentStart
            - DeploymentSuccess
            - DeploymentFailure
            - DeploymentStop
            - DeploymentRollback
          triggerName: PingDeploymentTrigger
          triggerTargetArn: !Ref PingDeploymentTopic
    
    events:
      - http:
          path: ping
          method: get
          cors: true

  # Pre-traffic validation hook
  pingPreTrafficHook:
    handler: src/hooks/pre-traffic.handler
    policies:
      - Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - codedeploy:PutLifecycleEventHookExecutionStatus
            Resource: "*"
    environment:
      CurrentVersion: !Ref PingLambdaVersions

  # Post-traffic validation hook
  pingPostTrafficHook:
    handler: src/hooks/post-traffic.handler
    policies:
      - Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - codedeploy:PutLifecycleEventHookExecutionStatus
            Resource: "*"

# Custom deployment types per stage
custom:
  deploymentType:
    prod: Canary10Percent5Minutes
    staging: Linear10PercentEvery1Minute
    dev: AllAtOnce

resources:
  Resources:
    # SNS Topic for deployment notifications
    PingDeploymentTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: canary-aws-ping-deployments

    # CloudWatch Alarms
    AliasErrorMetricGreaterThanZeroAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Lambda function errors
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 2
        MetricName: Errors
        Namespace: AWS/Lambda
        Period: 60
        Statistic: Sum
        Threshold: 0
        Dimensions:
          - Name: FunctionName
            Value: !Ref PingLambdaFunction
          - Name: Resource
            Value: !Sub "${PingLambdaFunction}:Live"

    AliasLatencyMetricGreaterThanThresholdAlarm:
      Type: AWS::CloudWatch::Alarm  
      Properties:
        AlarmDescription: Lambda function latency
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 2
        MetricName: Duration
        Namespace: AWS/Lambda
        Period: 60
        Statistic: Average
        Threshold: 1000
        Dimensions:
          - Name: FunctionName
            Value: !Ref PingLambdaFunction
          - Name: Resource
            Value: !Sub "${PingLambdaFunction}:Live"

plugins:
  - serverless-plugin-canary-deployments